<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.holunda.polyflow</groupId>
    <artifactId>polyflow-examples-parent</artifactId>
    <version>3.1.6-SNAPSHOT</version>
    <relativePath>../../../pom.xml</relativePath>
  </parent>

  <artifactId>polyflow-example-process-backend</artifactId>
  <name>examples/${project.artifactId}</name>

  <properties>
    <rest.api.location>src/main/api</rest.api.location>
    <rest.api.base-package>io.holunda.polyflow.example.process.approval.rest</rest.api.base-package>
    <maven.deploy.skip>true</maven.deploy.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.holunda.polyflow</groupId>
      <artifactId>polyflow-camunda-bpm-springboot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>io.holunda.polyflow</groupId>
      <artifactId>polyflow-example-users</artifactId>
    </dependency>
    <dependency>
      <groupId>io.holunda.polyflow</groupId>
      <artifactId>polyflow-tasklist-url-resolver</artifactId>
    </dependency>

    <dependency>
      <groupId>io.holixon</groupId>
      <artifactId>axon-gateway-spring-boot-starter</artifactId>
    </dependency>

    <!-- SpringBoot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <!-- Axon -->
    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <!--<scope>test</scope>-->
    </dependency>

    <!-- Camunda Scripting-->
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-datetime</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-jmx</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-json</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-jsr223</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-macro</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-nio</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-templates</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-xml</artifactId>
    </dependency>
    <!-- Data -->
    <dependency>
      <groupId>io.holunda.data</groupId>
      <artifactId>camunda-bpm-data</artifactId>
      <version>${camunda-bpm-data.version}</version>
    </dependency>

    <!-- SPIN -->
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-spin</artifactId>
    </dependency>
    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-dataformat-json-jackson</artifactId>
      <version>${version.camunda.spin}</version>
    </dependency>
    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-core</artifactId>
      <version>${version.camunda.spin}</version>
    </dependency>

    <!-- Jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
    </dependency>

    <!-- Swagger  -->
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>1.6.6</version>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-openapi-ignore</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-sources/openapi</outputDirectory>
              <resources>
                <resource>
                  <directory>${rest.api.location}</directory>
                  <includes>
                    <include>.openapi-generator-ignore</include>
                    <include>openapi.yml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <!-- Enforce resource copy -->
          <!-- This is a fix of Kotlin incremental Compiler bug -->
          <!-- See https://discuss.kotlinlang.org/t/kotlin-compiler-incremental-not-copying-resources/5640/5 -->
          <execution>
            <id>extra-copy-resources</id>
            <phase>process-classes</phase>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
          <execution>
            <id>extra-copy-test-resources</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>testResources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-server-stubs</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.build.directory}/generated-sources/openapi/openapi.yml</inputSpec>
              <generatorName>spring</generatorName>
              <apiPackage>${rest.api.base-package}.api</apiPackage>
              <modelPackage>${rest.api.base-package}.model</modelPackage>
              <modelNamePrefix/>
              <modelNameSuffix>Dto</modelNameSuffix>
              <configOptions>
                <sourceFolder>src/main/java</sourceFolder>
                <basePackage>${rest.api.base-package}</basePackage>
                <configPackage>${rest.api.base-package}</configPackage>
                <interfaceOnly>true</interfaceOnly>
                <dateLibrary>java8</dateLibrary>
                <swaggerDocketConfig>false</swaggerDocketConfig>
                <reactive>false</reactive>
                <bigDecimalAsString>true</bigDecimalAsString>
                <useOptional>true</useOptional>
                <useBeanValidation>true</useBeanValidation>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- kotlin compiler -->
        <artifactId>kotlin-maven-plugin</artifactId>
        <groupId>org.jetbrains.kotlin</groupId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>kapt</id>
            <goals>
              <goal>kapt</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/target/generated-sources/openapi/src/main/java</sourceDir>
                <sourceDir>src/main/kotlin</sourceDir>
              </sourceDirs>
              <annotationProcessorPaths>
                <annotationProcessorPath>
                  <groupId>org.mapstruct</groupId>
                  <artifactId>mapstruct-processor</artifactId>
                  <version>${org.mapstruct.version}</version>
                </annotationProcessorPath>
              </annotationProcessorPaths>
            </configuration>
          </execution>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/target/generated-sources/openapi/src/main/java</sourceDir>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- java compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
