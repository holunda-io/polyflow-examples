# Use this only in dev environments. It's not intended for production usage.
version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '22181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/bash', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      echo -e 'Currently available topics:'
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics...'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic polyflow-task --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic polyflow-data --replication-factor 1 --partitions 1

      echo -e 'Resulting topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  postgres-engine:
    image: postgres:13.2
    container_name: postgres-engine
    environment:
      POSTGRES_USER: polyflow_user
      POSTGRES_PASSWORD: S3Cr3T!
      POSTGRES_DB: enginedb
    ports:
      - '25433:5432'

  postgres-tasklist:
    image: postgres:13.2
    container_name: postgres-tasklist
    environment:
      POSTGRES_USER: polyflow_user
      POSTGRES_PASSWORD: S3Cr3T!
      POSTGRES_DB: tasklistdb
    ports:
      - '25432:5432'

