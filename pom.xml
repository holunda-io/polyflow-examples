<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.holunda.polyflow</groupId>
  <artifactId>polyflow-examples-parent</artifactId>
  <version>4.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>POM: ${project.artifactId}</name>
  <description>Polyflow Examples Parent POM</description>
  <url>https://github.com/holunda-io/polyflow-examples/</url>

  <properties>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>17</java.version>
    <version.java>${java.version}</version.java>
    <version.java>${java.version}</version.java>

    <kotlin.version>1.9.23</kotlin.version>
    <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>
    <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
    <kotlin-logging.version>3.0.5</kotlin-logging.version>

    <!-- Never deploy examples -->
    <maven.deploy.skip>true</maven.deploy.skip>

    <version.java>${java.version}</version.java>
    <npm.version>9.5.1</npm.version>
    <node.version>v18.16.0</node.version>

    <!--
      <camunda-ee>false</camunda-ee>
      Use the system property: -Dcamunda-ee to enable EE
    -->


    <springboot.version>3.2.3</springboot.version>
    <polyflow.version>4.1.4</polyflow.version>

    <camunda-ce.version>7.20.0</camunda-ce.version>
    <camunda-ee.version>7.20.0-ee</camunda-ee.version>
    <camunda-springboot.version>${camunda-ce.version}</camunda-springboot.version>

    <camunda-bpm-assert.version>${camunda-ce.version}</camunda-bpm-assert.version>
    <camunda-bpm-mockito.version>7.20.0</camunda-bpm-mockito.version>
    <version.camunda.spin>1.23.0</version.camunda.spin>
    <camunda-bpm-data.version>1.4.0</camunda-bpm-data.version>
    <springdoc.version>1.7.0</springdoc.version>
    <org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
    <mockito-kotlin.version>5.2.1</mockito-kotlin.version>
    <jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
    <junit-jupiter.version>5.10.2</junit-jupiter.version>

  </properties>

  <modules>
    <!-- Shared backend modules -->
    <module>components/users</module>
    <module>components/tasklist-reactive-backend</module>
    <module>components/tasklist-backend</module>
    <module>components/approval/backend</module>
    <module>components/order-processing/backend</module>
    <module>components/infrastructure</module>

    <!-- Example implementations for different scenarios -->
    <module>scenarios</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${springboot.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-bom</artifactId>
        <version>${camunda.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>io.holunda.polyflow</groupId>
        <artifactId>polyflow-taskpool-dependencies</artifactId>
        <version>${polyflow.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>io.holunda.polyflow</groupId>
        <artifactId>polyflow-example-tasklist-backend</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.holunda.polyflow</groupId>
        <artifactId>polyflow-example-infrastructure</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.holunda.polyflow</groupId>
        <artifactId>polyflow-example-tasklist-angular</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.holunda.polyflow</groupId>
        <artifactId>polyflow-example-approval-backend</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.holunda.polyflow</groupId>
        <artifactId>polyflow-example-approval-forms</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.holunda.polyflow</groupId>
        <artifactId>polyflow-example-users</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Open API -->
      <dependency>
        <groupId>org.openapitools</groupId>
        <artifactId>jackson-databind-nullable</artifactId>
        <version>${jackson-databind-nullable.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-ui</artifactId>
        <version>${springdoc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-kotlin</artifactId>
        <version>${springdoc.version}</version>
      </dependency>

      <!-- Camunda BPM Data -->
      <dependency>
        <groupId>io.holunda.data</groupId>
        <artifactId>camunda-bpm-data</artifactId>
        <version>${camunda-bpm-data.version}</version>
      </dependency>

      <!-- MapStruct -->
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>

      <!-- Gateway -->
      <dependency>
        <groupId>io.holixon.axon.gateway</groupId>
        <artifactId>axon-gateway-spring-boot-starter</artifactId>
        <version>2.0.0</version>
      </dependency>

      <dependency>
        <groupId>io.holunda</groupId>
        <artifactId>camunda-platform-7-autologin</artifactId>
        <version>0.1.0</version>
      </dependency>

      <dependency>
        <groupId>org.mockito.kotlin</groupId>
        <artifactId>mockito-kotlin</artifactId>
        <version>${mockito-kotlin.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
    </dependency>
    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito.kotlin</groupId>
      <artifactId>mockito-kotlin</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <defaultGoal>clean package</defaultGoal>
    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
    <pluginManagement>
      <plugins>

        <plugin>
          <!-- cleaning -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.3.2</version>
        </plugin>

        <plugin>
          <!-- resources -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>

        <plugin>
          <!-- Open API generator -->
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>7.0.1</version>
        </plugin>

        <plugin>
          <!-- kotlin compiler -->
          <artifactId>kotlin-maven-plugin</artifactId>
          <groupId>org.jetbrains.kotlin</groupId>
          <version>${kotlin.version}</version>
          <configuration>
            <jvmTarget>${java.version}</jvmTarget>
            <languageVersion>1.9</languageVersion>
            <apiVersion>1.9</apiVersion>
            <compilerPlugins>
              <plugin>spring</plugin>
              <plugin>jpa</plugin>
              <plugin>no-arg</plugin>
              <plugin>all-open</plugin>
            </compilerPlugins>
            <pluginOptions>
              <option>all-open:annotation=org.axonframework.eventhandling.EventHandler</option>
              <option>all-open:annotation=org.axonframework.queryhandling.QueryHandler</option>
              <option>all-open:annotation=com.tngtech.jgiven.integration.spring.JGivenStage</option>
            </pluginOptions>
          </configuration>
          <executions>
            <execution>
              <id>compile</id>
              <goals>
                <goal>compile</goal>
              </goals>
              <configuration>
                <sourceDirs>
                  <sourceDir>${project.basedir}/target/generated-sources/openapi/src/main/kotlin</sourceDir>
                  <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                </sourceDirs>
              </configuration>
            </execution>
            <execution>
              <id>test-compile</id>
              <goals>
                <goal>test-compile</goal>
              </goals>
              <configuration>
                <sourceDirs>
                  <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                </sourceDirs>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-allopen</artifactId>
              <version>${kotlin.version}</version>
            </dependency>
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-noarg</artifactId>
              <version>${kotlin.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <!-- java compiler -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
          <configuration>
            <encoding>UTF-8</encoding>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
          <executions>
            <!-- Replacing default-compile as it is treated specially by Maven -->
            <execution>
              <id>default-compile</id>
              <phase>none</phase>
            </execution>
            <!-- Replacing default-testCompile as it is treated specially by Maven -->
            <execution>
              <id>default-testCompile</id>
              <phase>none</phase>
            </execution>
            <execution>
              <id>java-compile</id>
              <phase>compile</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>java-test-compile</id>
              <phase>test-compile</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- for packaging springboot application -->
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${springboot.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <excludes>
              <exclude>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
              </exclude>
              <exclude>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
              </exclude>
              <exclude>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
              </exclude>
              <exclude>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
              </exclude>
            </excludes>
          </configuration>
        </plugin>

        <plugin>
          <!-- for running npm build -->
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.15.0</version>
        </plugin>

        <plugin>
          <!-- gitflow -->
          <groupId>com.amashchenko.maven.plugin</groupId>
          <artifactId>gitflow-maven-plugin</artifactId>
          <version>1.21.0</version>
          <configuration>
            <gitFlowConfig>
              <productionBranch>master</productionBranch>
              <developmentBranch>develop</developmentBranch>
              <featureBranchPrefix>feature/</featureBranchPrefix>
              <releaseBranchPrefix>release/</releaseBranchPrefix>
              <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
              <supportBranchPrefix>support/</supportBranchPrefix>
              <origin>origin</origin>
            </gitFlowConfig>
            <useSnapshotInHotfix>true</useSnapshotInHotfix>
            <useSnapshotInRelease>true</useSnapshotInRelease>
            <keepBranch>false</keepBranch>
            <pushRemote>true</pushRemote>
          </configuration>
        </plugin>

        <plugin>
          <!-- versions plugin -->
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.16.2</version>
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.2.5</version>
          <configuration>
            <useSystemClassLoader>false</useSystemClassLoader>
            <includes>
              <include>**/*Test</include>
            </includes>
            <excludes>
              <exclude>**/*ITest</exclude>
              <exclude>**/*IT</exclude>
            </excludes>
            <runOrder>random</runOrder>
            <systemPropertyVariables>
              <jgiven.report.dir>${project.build.directory}/jgiven-reports</jgiven.report.dir>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.2.5</version>
          <executions>
            <execution>
              <phase>integration-test</phase>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <includes>
              <include>**/*ITest</include>
              <include>**/*IT</include>
            </includes>
            <useSystemClassLoader>false</useSystemClassLoader>
            <runOrder>random</runOrder>
            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
            <trimStackTrace>false</trimStackTrace>
          </configuration>
        </plugin>

        <plugin>
          <!-- Enforce -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.4.1</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.9.5</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>17</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <!-- Enforce -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>

      <plugin>
        <!-- Kotlin -->
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <useSystemClassLoader>false</useSystemClassLoader>
          <runOrder>random</runOrder>
          <systemPropertyVariables>
            <jgiven.report.dir>${project.build.directory}/jgiven-reports</jgiven.report.dir>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- Frontend -->
    <profile>
      <id>frontend</id>
      <activation>
        <property>
          <name>!skipFrontend</name>
        </property>
      </activation>
      <modules>
        <!-- Shared frontend modules -->
        <module>components/tasklist-angular</module>
        <module>components/approval/process-forms</module>
      </modules>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- I-Test profile (refined in sub-modules) -->
    <profile>
      <id>itest</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <skipFrontend>true</skipFrontend>
      </properties>
      <build>
        <defaultGoal>integration-test failsafe:verify</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      Profile for selecting the Camunda BPM Engine version.
      CE stands for Community Edition
      EE stands for Enterprise Edition
    -->
    <profile>
      <id>camunda-ce</id>
      <activation>
        <property>
          <name>!camunda-ee</name>
        </property>
      </activation>
      <properties>
        <camunda.version>${camunda-ce.version}</camunda.version>
      </properties>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
            <version>${camunda.version}</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
    </profile>

    <profile>
      <id>camunda-ee</id>
      <activation>
        <property>
          <name>camunda-ee</name>
        </property>
      </activation>
      <properties>
        <camunda.version>${camunda-ee.version}</camunda.version>
      </properties>
      <repositories>
        <repository>
          <id>camunda-bpm-ee</id>
          <name>camunda-bpm-ee</name>
          <url>https://artifacts.camunda.com/artifactory/camunda-bpm-ee</url>
        </repository>
      </repositories>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter-webapp-ee</artifactId>
            <version>${camunda.version}</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
    </profile>

    <profile>
      <id>generate-sql</id>
      <build>
        <plugins>
          <plugin>
            <groupId>de.juplo</groupId>
            <artifactId>hibernate-maven-plugin</artifactId>
            <version>2.1.1</version>
            <executions>
              <execution>
                <id>generate-h2-ddl</id>
                <goals>
                  <goal>create</goal>
                </goals>
                <configuration>
                  <dialect>org.hibernate.dialect.H2Dialect</dialect>
                  <execute>false</execute>
                  <show>true</show>
                  <format>true</format>
                  <outputFile>h2_ddl.sql</outputFile>
                </configuration>
              </execution>
              <execution>
                <id>generate-mariadb-ddl</id>
                <goals>
                  <goal>create</goal>
                </goals>
                <configuration>
                  <dialect>org.hibernate.dialect.MariaDB103Dialect</dialect>
                  <execute>false</execute>
                  <show>true</show>
                  <format>true</format>
                  <outputFile>mariadb_ddl.sql</outputFile>
                </configuration>
              </execution>
              <execution>
                <id>generate-postgresql-ddl</id>
                <goals>
                  <goal>create</goal>
                </goals>
                <configuration>
                  <dialect>org.hibernate.dialect.PostgreSQL9Dialect</dialect>
                  <execute>false</execute>
                  <show>true</show>
                  <format>true</format>
                  <outputFile>postgresql_ddl.sql</outputFile>
                </configuration>
              </execution>
              <execution>
                <id>generate-oracle-ddl</id>
                <goals>
                  <goal>create</goal>
                </goals>
                <configuration>
                  <dialect>org.hibernate.dialect.Oracle9iDialect</dialect>
                  <execute>false</execute>
                  <show>true</show>
                  <format>true</format>
                  <outputFile>oracle_ddl.sql</outputFile>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <!-- Jackson datatype jars starting with version 2.10.0 contain a module-info.class file which breaks older javassist versions. -->
              <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>3.30.2-GA</version>
              </dependency>
              <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.3.1</version>
              </dependency>
              <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${springboot.version}</version>
              </dependency>
              <!-- Datenbank -->
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>2.2.224</version>
              </dependency>
              <!-- Hibernate Model Gen for type safe criteria -->
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>42.7.2</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:holunda-io/polyflow-examples.git</connection>
    <url>scm:git:git@github.com:holunda-io/polyflow-examples.git</url>
    <developerConnection>scm:git:git@github.com:holunda-io/polyflow-examples.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <repositories>
    <!-- Snapshot repo for polyflow library -->
    <repository>
      <id>ossrh</id>
      <name>ossrh</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>

  <developers>
    <developer>
      <id>zambrovski</id>
      <name>Simon Zambrovski</name>
      <email>simon.zambrovski@holisticon.de</email>
      <organization>Holisticon AG</organization>
      <organizationUrl>https://www.holisticon.de</organizationUrl>
    </developer>
    <developer>
      <id>luchsamapparat</id>
      <name>Marvin Luchs</name>
      <email>marvin.luchs@holisticon.de</email>
      <organization>Holisticon AG</organization>
      <organizationUrl>https://www.holisticon.de</organizationUrl>
    </developer>
    <developer>
      <id>mrm1st3r</id>
      <name>Lukas Taake</name>
      <email>lukas.taakes@holisticon.de</email>
      <organization>Holisticon AG</organization>
      <organizationUrl>https://www.holisticon.de</organizationUrl>
    </developer>
    <developer>
      <id>jangalinski</id>
      <name>Jan Galinski</name>
      <email>jan.galinski@holisticon.de</email>
      <organization>Holisticon AG</organization>
      <organizationUrl>https://www.holisticon.de</organizationUrl>
    </developer>
    <developer>
      <id>lbilger</id>
      <name>Lars Bilger</name>
    </developer>
    <developer>
      <id>a-hegerath</id>
      <name>Andre Hegerath</name>
    </developer>
  </developers>
</project>
